# Default values for pdc-portal.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## deployment specific configuration
deployment:
  ## configuration of the image to be used
  image:
    # -- image name
    # ref: https://hub.docker.com/r/i4trust/pdc-portal
    repository: quay.io/i4trust/pdc-portal
    # -- tag of the image to be used
    tag: 2.5.0

## Set either an ingress or openshift route for making the portal externally available
##
## ingress configuration
ingress:
  # -- should there be an ingress to connect the activation service with the public internet
  enabled: false
## openshift specific route definition. Will not work on plain k8s
route:
  # -- should the deployment create openshift routes
  enabled: false

## Debug output
debug:
  enabled: false
      
## PDC Portal configuration
config:
  # Title of application
  title: "Packet Delivery Portal"
  # Labels
  getLabel: "Delivery Order"
  inputLabel: "Packet Delivery ID"
  # Client configuration
  client:
    # Client ID
    id: "EU.EORI.NLPACKETDEL"
    # Client key (PEM private key)
    key: |
      -----BEGIN PRIVATE KEY-----
      <Put private key here>
      -----END PRIVATE KEY-----
    # Client certificate (PEM certificate chain)
    crt: |
      -----BEGIN CERTIFICATE-----
      <Put certificates here>
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      <Put intermediate certificates here>
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      <Put Root certificate here>
      -----END CERTIFICATE-----
      
  # Configuration for external access
  external:
    # Host (Hostname for external access)
    host: https://pdc-portal.domain.org
  # OIDC configuration
  oidc:
    # Path for OIDC redirect callback
    redirect_path: "/openid_connect1.0/return"
    # ACR values
    acr: "urn:http://eidas.europa.eu/LoA/NotNotified/high"
  # Context Broker configuration
  cb:
    # Endpoint of (PEP/PDP protected) NGSI-LD API
    endpoint: "https://kong.domain.org/packetdelivery/ngsi-ld/v1"

  # Configuration for SIOP flow
  siop:
    # SIOP flow enabled
    enabled: false
    
  # Configuration of express web server
  express:
    # Port (Internal port of the express web server)
    port: 7000
  # IDP configuration for login
  # In this demo application it is configured for the two IDPs of HappyPets and NoCheaper,
  # but it can be any number of organisations and external IDPs.
  idp:
    - name: "Happy Pets Inc."
      id: "EU.EORI.NLHAPPYPETS"
      url: "https://idp-happypets-shop.i4trust.fiware.io"
      authorize_endpoint: "https://idp-happypets-shop.i4trust.fiware.io/oauth2/authorize"
      token_endpoint: "https://idp-happypets-shop.i4trust.fiware.io/oauth2/token"
    - name: "No Cheaper Inc."
      id: "EU.EORI.NLNOCHEAPER"
      url: "https://idp-nocheaper-shop.i4trust.fiware.io"
      authorize_endpoint: "https://idp-nocheaper-shop.i4trust.fiware.io/oauth2/authorize"
      token_endpoint: "https://idp-nocheaper-shop.i4trust.fiware.io/oauth2/token"
      
